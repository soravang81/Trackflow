generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vendor {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  orders   Order[]
}

model Customer {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  orders   Order[]
}

model Partner {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  orders   Order[]  // One-to-many relationship
}

model Order {
  id                String   @id @default(uuid())
  locationId        String?
  destinationId     String?
  vendorId          String
  partnerId         String?
  customerId        String
  status            String   @default("pending")

  vendor            Vendor     @relation(fields: [vendorId], references: [id])
  partner           Partner?   @relation(fields: [partnerId], references: [id])
  customer          Customer   @relation(fields: [customerId], references: [id])
  destination       Location?  @relation(name: "Destination", fields: [destinationId], references: [id])
  location          Location?  @relation(name: "CurrentLocation", fields: [locationId], references: [id])
  
  // Additional locations if needed
  locations         Location[] @relation(name: "OrderLocations")
}

model Location {
  id               String   @id @default(uuid())
  lat              Float
  lng              Float
  updatedAt        DateTime @updatedAt
  
  // Relations back to orders
  currentOrders    Order[]  @relation(name: "CurrentLocation")
  destinationOrders Order[] @relation(name: "Destination")
  
  // If you need to track which order this location belongs to
  orderId          String?
  order            Order?   @relation(name: "OrderLocations", fields: [orderId], references: [id])
}
